
producer {
  topic: test-topic
  key.serializer: org.apache.kafka.common.serialization.StringSerializer
  value.serializer: smith.melton.serde.JsonPojoSerializer
  bootstrap.servers: "eprupetw10aa:30903, eprupetw10aa:30448,  eprupetw10aa:30805"
}

tx-producer {
  topic: test-topic
  transactional.id: user-tx-producer
  key.serializer: org.apache.kafka.common.serialization.StringSerializer
  value.serializer: smith.melton.serde.JsonPojoSerializer
  bootstrap.servers: "eprupetw10aa:30903, eprupetw10aa:30448,  eprupetw10aa:30805"
}

copier {
  consumer {
    topics: [test-topic]
    auto.offset.reset: latest
    isolation.level: read_committed
    bootstrap.servers: "eprupetw10aa:30903, eprupetw10aa:30448,  eprupetw10aa:30805"
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: smith.melton.serde.JsonPojoDeserializer
    entity.pojo.class: smith.melton.faker.user.User
    enable.auto.commit: false
    group.id = "simple consumer group"
  }
  producer {
    topic: output-copier-topic
    transactional.id: copier-producer
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: smith.melton.serde.JsonPojoSerializer
    bootstrap.servers: "eprupetw10aa:30903, eprupetw10aa:30448,  eprupetw10aa:30805"
  }
}

